fastlane_version "2.63.0"

skip_docs

desc "Runs all the tests"
lane :tests do
  scan(scheme: "JOSESwift")
end

desc "Lints all Swift files"
lane :lint do
  # Todo: Don't ignore exit status (#98)
  swiftlint(ignore_exit_status: true)
end

desc "Format all Swift files"
lane :format_code do
  swiftlint(mode: :autocorrect)
end

desc "Bumps the version number"
lane :bump do |options|
  bump_type = options[:type]
  version = options[:version]

  new_version_xcode = ""
  new_version_podspec = ""

  case bump_type
  when "major", "minor", "patch"
    new_version_xcode = increment_version_number(bump_type: bump_type)
    new_version_podspec = version_bump_podspec(path: "JOSESwift.podspec", bump_type: bump_type)
  else
    if version.nil?
      new_version_xcode = increment_version_number
      new_version_podspec = version_bump_podspec(path: "JOSESwift.podspec")
    else
      new_version_xcode = increment_version_number(version_number: version)
      new_version_podspec = version_bump_podspec(path: "JOSESwift.podspec", version_number: version)
    end
  end

  if new_version_xcode == new_version_podspec
    UI.success "Did bump version number to #{new_version_xcode}"
  else
    UI.user_error!("Xcode and .podspec version mismatch: #{new_version_xcode} != #{new_version_podspec}")
  end

  new_version_xcode
end

desc "Prepares a release"
lane :prepare do |options|
  # ensure_git_branch(branch: "master")
  ensure_git_status_clean

  bump_type = options[:type]
  version = ""

  case bump_type
  when "major", "minor", "patch"
    version = bump(type: bump_type)
    sh("git", "checkout", "-b", "release/#{version.gsub(/\./, '-')}" )
    commit_version_bump(message: "Bump version to #{version}", include: ["JOSESwift.podspec"])
  else
    UI.user_error!("No bump type specified!")
  end

  ensure_git_status_clean

  # format_code
  # git_commit(path: "./**/*.swift", message: "Automatically format Swift code")

  ensure_git_status_clean

  # tests

  promt_text = """
    #{options[:version]} has been prepped for release.\
    If you have any additional changes you would like to make, please do those before continuing.
    Would you like to commit, tag, and push #{version}?
    """

  if prompt(text: promt_text.green, boolean: true, ci_input:"y")
    git_commit(path: ".", message: "Prepare for #{version} release")
    push_to_git_remote(remote: remote)
  end
end
